/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {

        bht: balanced_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        nht: number_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "NUM_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <275>;    // <---[[slightly higher than moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

// ----------------------------------------------      ----------------------------------------------
// | ESC  |  Q  |  W  |  E  |  R  |  T  |              |  Y  |  U  |  I  |  O  |  P  | [ | BKSP / ] |
// | TAB    |  A  |  S  |  D   |  F  |  G  |             |  H  |  J  |  K  |  L  |  '  |    ENTER   |
// | SHIFT     |  Z  |  X  |  C  |  V  |  B  |              |  N  |  M  |  ,  |  .  |  /  |  RSHFT/ENT  |
// | LCTRL   | LALT| LGUI |   BKSP/L2        |          |   SPACE/L1    |  RGUI  |  RALT  |RCTRL|
// -------------------------------------------        -----------------------------------------------

        default_layer {
            bindings = <
    &nht GRAVE ESC   &kp Q     &kp W        &kp E      &kp R     &kp T       /**/ &kp Y       &kp U      &kp I          &kp O         &kp P     &bht RBKT LBKT  &kp BkSP
    &kp TAB          &kp A     &kp S        &kp D      &kp F     &kp G       /**/ &kp H       &kp J      &kp K          &kp L         &kp SEMI  &nht ENTER SQT
    &kp LSHFT        &kp Z     &kp X        &kp C      &kp V     &kp B       /**/ &kp N       &kp M      &kp COMMA      &kp DOT       &kp FSLH  &mt RSHFT ENTER
    &kp LCTRL        &kp LALT  &kp LGUI     &none      &lt 2 SPACE           /**/ &lt 1 SPACE &none      &mt RGUI DOWN  &mt RALT UP   &mt RCTRL RIGHT
            >;
        };

// ----------------------------------------------      ----------------------------------------------
// | `    |  1  |  2  |  3  |  4  |  5  |              |  6  |  7  |  8  |  9  | 0 |  -  |  =  |
// | `      |     |   |     |   |   |             |    |  [  |  ]  |    |  '  |      \    |
// | trans     |  USB/BT   |     |     |    |   |              |     |     |    |     |     |  trans  |
// | trans   | trans| trans |           |             |   (being held)   | trans | trans | trans|trans|
// -------------------------------------------        -----------------------------------------------

        num_layer {
            bindings = <
    &kp GRAVE     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5   /**/ &kp N6     &kp N7      &kp N8      &kp N9       &kp N0     &kp MINUS  &kp EQUAL
    &kp GRAVE  &kp F1    &kp F2    &kp F3     &kp F4     &kp F5   /**/ &kp F6     &kp LBKT    &kp RBKT    &none        &kp SQT    &kp BSLH
    &trans     &kp F7    &kp F8    &kp F9     &kp F10    &kp F11  /**/ &kp F12    &none       &none       &none        &none      &trans
    &trans     &trans    &trans    &none      &sl 3              /**/ &trans                 &trans      &trans       &trans     &trans
            >;
        };

// ----------------------------------------------      ----------------------------------------------
// | F1   |  F2 |  F3 |  F4 | F5  |  F6 |              |  F7     |    F8    |  F9  |    F1O   |   F11  |  F12  |  DEL  |
// | CAP      |     | End| PgDn | PgUp |  Home   |           |  Left   |  Down   |  Up   |  Right   |   '    |    Play/Pause   |
// | trans     |  BT #1  |  BT #2   | BT #3 |      |     |      |      |    |    |    |    |BT Clear |
// | trans   | trans| trans |   (being held)     |       |                  | trans | trans | BT #4  |
// -------------------------------------------        -----------------------------------------------

        symb_layer {
            bindings = <
    &kp F1        &kp EXCL        &kp AT          &kp HASH       &kp DLLR  &kp PRCNT    /**/ &kp CART     &kp AMPS     &kp STAR    &kp LPAR   &kp RPAR    &kp EQUAL  &kp PLUS
    &kp CAPS      &none           &kp END         &kp PG_DN      &kp PG_UP &kp HOME  /**/    &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT &kp SQT    &kp C_PP
    &none  &none    &none    &none   &none     &none   /**/      &none      &none      &none     &none     &none      &none
    &trans        &trans          &trans          &none            &trans                 /**/ &sl 3     &none      &trans    &trans    &bt BT_SEL 3
            >;
        };

        adjust_layer {
            bindings = <
    &trans        &trans          &trans          &trans           &trans       &trans    /**/ &trans     &trans     &trans    &trans  &trans    &trans  &trans
    &kp CAPS      &none           &kp END         &kp PG_DN        &kp PG_UP    &kp HOME  /**/ &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT &kp SQT    &kp C_PP
    &out OUT_TOG  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3 &none     /**/ &bt BT_NXT      &none      &none     &none     &none      &bt BT_CLR
    &trans        &trans          &trans          &none            &trans                 /**/ &trans     &none      &trans    &trans    &bt BT_SEL 3
            >;
        }
    };
};